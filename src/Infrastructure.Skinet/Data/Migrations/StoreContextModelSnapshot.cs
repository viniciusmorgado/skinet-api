// <auto-generated />
using Api.Skinet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Skinet.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Skinet.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductBrandId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductBrandId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a description for product 1",
                            Name = "Product 1",
                            Picture = "images/products/sb-ang1.png",
                            Price = 0.367271393669832m,
                            ProductBrandId = 1,
                            ProductTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "This is a description for product 2",
                            Name = "Product 2",
                            Picture = "images/products/sb-ang2.png",
                            Price = 0.5450624614681m,
                            ProductBrandId = 2,
                            ProductTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "This is a description for product 3",
                            Name = "Product 3",
                            Picture = "images/products/sb-core1.png",
                            Price = 0.721758242194663m,
                            ProductBrandId = 3,
                            ProductTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "This is a description for product 4",
                            Name = "Product 4",
                            Picture = "images/products/sb-core2.png",
                            Price = 0.818318842450313m,
                            ProductBrandId = 4,
                            ProductTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "This is a description for product 5",
                            Name = "Product 5",
                            Picture = "images/products/sb-react1.png",
                            Price = 0.561551412773914m,
                            ProductBrandId = 5,
                            ProductTypeId = 5
                        });
                });

            modelBuilder.Entity("Domain.Skinet.Entities.ProductBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProductBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Product Brand 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Product Brand 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Product Brand 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Product Brand 3"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Product Brand 4"
                        });
                });

            modelBuilder.Entity("Domain.Skinet.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Product Type 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Product Type 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Product Type 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Product Type 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Product Type 5"
                        });
                });

            modelBuilder.Entity("Domain.Skinet.Entities.Product", b =>
                {
                    b.HasOne("Domain.Skinet.Entities.ProductBrand", "ProductBrand")
                        .WithMany()
                        .HasForeignKey("ProductBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Skinet.Entities.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductBrand");

                    b.Navigation("ProductType");
                });
#pragma warning restore 612, 618
        }
    }
}
