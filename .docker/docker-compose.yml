# Production composer

services:
  api:
    container_name: api-skinet
    image: vinimorgado/skinet-api:latest
    networks:
      - skinet-network
    ports:
      - "10401:10401"
    depends_on: 
      sql-database:
        condition: service_started

  postgres:
    container_name: database-skinet
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      - skinet-network
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: <YourStrong@Passw0rd>
      MSSQL_PID: "Express"
    volumes:
      - sql-database-persistence:/var/opt/mssql/data
    restart: unless-stopped
    user: root

  redis:
    container_name: redis-skinet
    image: redis:alpine3.19
    volumes: 
      - memory-database-persistence:/var/opt/redis/data
    networks:
      - skinet-network

  rabbitmq:
    container_name: rabbitmq-skinet
    image: rabbitmq:3.9.29-management
    networks:
      - skinet-network
    hostname: "rabbitmq-skinet"
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"

  jaeger:
    container_name: jaeger-skinet
    image: jaegertracing/all-in-one:1.57
    networks:
      - skinet-network
  # prometheus:

  # grafana:
  
  # seq-datalust:
  
  # watchtower-webhook:
  
  # telegram-notifier-bot:

volumes:
  sql-database-persistence:
    name: database-skinet-data
  memory-database-persistence:
    name: redis-skinet-data

networks:
  skinet-network:
    name: skinet-network
    driver: bridge
    external: false
