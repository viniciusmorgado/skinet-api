services:
  application:
    container_name: application-${STACK_NAME}
    image: vinimorgado/skinet-api:latest
    networks:
      - skinet-network
    ports:
      - "10401:10401"
    depends_on: 
      postgres-skinet:
        condition: service_started
    read_only: true
    deploy:
      resources:
        limits:
          cpus: '0.50'         # Limit the container to use at most 50% of a CPU
          memory: 512M         # Limit the container to use at most 512MB of RAM
        reservations:
          cpus: '0.25'         # Reserve 25% of a CPU for the container
          memory: 256M  

  postgres:
    container_name: postgres-${STACK_NAME}
    image: postgres:12.19-bullseye
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: skinet
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    networks:
      - skinet-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'         # Limit the container to use at most 50% of a CPU
          memory: 512M         # Limit the container to use at most 512MB of RAM
        reservations:
          cpus: '0.25'         # Reserve 25% of a CPU for the container
          memory: 256M  

  seq-datalust:
    container_name: seq-${STACK_NAME}
    image: datalust/seq:latest
    networks:
      - skinet-network
    restart: unless-stopped
    volumes:
    - seq:/data
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "10402:80"
    deploy:
      resources:
        limits:
          cpus: '0.50'         # Limit the container to use at most 50% of a CPU
          memory: 512M         # Limit the container to use at most 512MB of RAM
        reservations:
          cpus: '0.25'         # Reserve 25% of a CPU for the container
          memory: 256M  

volumes:
  postgres:
    name: postgres-skinet
  seq:
    name: seq-skinet

networks:
  skinet-network:
    name: skinet-network
    driver: bridge
    external: false
